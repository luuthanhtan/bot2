// commands/clearai.js
import '../../utils/logger.js';

export default {
    name: 'clearai',
    description: 'X√≥a l·ªãch s·ª≠ tr√≤ chuy·ªán AI c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ x√≥a to√†n b·ªô l·ªãch s·ª≠ ho·∫∑c m·ªôt cu·ªôc tr√≤ chuy·ªán c·ª• th·ªÉ b·∫±ng c√°ch cung c·∫•p ID. üóëÔ∏è',
    
    async execute({message, args, config, logModAction, sendEmbedMessage, client, model, chatM}) {
        const userId = message.author.id;
        
        try {
            // Ki·ªÉm tra n·∫øu c√≥ chatId ƒë∆∞·ª£c cung c·∫•p
            if (args.length > 0) {
                const chatId = args[0];
                
                // Ki·ªÉm tra xem chatId c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng kh√¥ng (a{s·ªë})
                if (!chatId.match(/^a\d+$/)) {
                    return message.reply('‚ùå ID cu·ªôc tr√≤ chuy·ªán kh√¥ng h·ª£p l·ªá. ID ph·∫£i c√≥ ƒë·ªãnh d·∫°ng "a" theo sau l√† m·ªôt s·ªë, v√≠ d·ª•: a1, a2, a3, ...');
                }
                
                // Th√¥ng b√°o ƒëang x·ª≠ l√Ω
                const processingMsg = await message.channel.send(`üóëÔ∏è ƒêang x√≥a cu·ªôc tr√≤ chuy·ªán ${chatId}...`);
                
                try {
                    // X√≥a cu·ªôc tr√≤ chuy·ªán theo ID
                    await chatM.deleteChatById(userId, chatId);
                    
                    // X√≥a th√¥ng b√°o ƒëang x·ª≠ l√Ω
                    await processingMsg.delete().catch(() => {});
                    
                    // G·ª≠i x√°c nh·∫≠n
                    await message.reply(`‚úÖ ƒê√£ x√≥a cu·ªôc tr√≤ chuy·ªán ${chatId}.`);
                    
                    // Ghi log
                    console.log(`User ${message.author.tag} (${userId}) ƒë√£ x√≥a cu·ªôc tr√≤ chuy·ªán ${chatId}.`);
                } catch (error) {
                    // X√≥a th√¥ng b√°o ƒëang x·ª≠ l√Ω
                    await processingMsg.delete().catch(() => {});
                    
                    // Th√¥ng b√°o l·ªói
                    await message.reply(`‚ùå ${error.message}`);
                }
            } else {
                // X√≥a to√†n b·ªô l·ªãch s·ª≠ tr√≤ chuy·ªán
                // Th√¥ng b√°o ƒëang x·ª≠ l√Ω
                const processingMsg = await message.channel.send('üóëÔ∏è ƒêang x√≥a to√†n b·ªô l·ªãch s·ª≠ tr√≤ chuy·ªán...');
                
                // X√≥a l·ªãch s·ª≠ tr√≤ chuy·ªán AI
                await chatM.deleteUserChatHistory(userId);
                
                // T·∫°o m·ªôt cu·ªôc tr√≤ chuy·ªán m·ªõi ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ ti·∫øp t·ª•c s·ª≠ d·ª•ng
                await chatM.createNewChat(userId);
                
                // X√≥a th√¥ng b√°o ƒëang x·ª≠ l√Ω
                await processingMsg.delete().catch(() => {});
                
                // G·ª≠i x√°c nh·∫≠n
                await message.reply('‚úÖ ƒê√£ x√≥a t·∫•t c·∫£ l·ªãch s·ª≠ tr√≤ chuy·ªán c·ªßa b·∫°n v·ªõi AI. M·ªôt cu·ªôc tr√≤ chuy·ªán m·ªõi ƒë√£ ƒë∆∞·ª£c t·∫°o.');
                
                // Ghi log
                console.log(`User ${message.author.tag} (${userId}) ƒë√£ x√≥a to√†n b·ªô l·ªãch s·ª≠ tr√≤ chuy·ªán AI.`);
            }
        } catch (error) {
            console.error(`L·ªói khi x√≥a l·ªãch s·ª≠ tr√≤ chuy·ªán: ${error.message}`);
            message.reply('‚ùå C√≥ l·ªói x·∫£y ra khi x√≥a l·ªãch s·ª≠ tr√≤ chuy·ªán. Vui l√≤ng th·ª≠ l·∫°i sau.');
        }
    },
};