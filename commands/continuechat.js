// commands/continuechat.js
const db = require('../utils/database');
require('../utils/logger');

module.exports = {
    name: 'continuechat',
    description: 'Ti·∫øp t·ª•c m·ªôt cu·ªôc tr√≤ chuy·ªán AI ƒë√£ l∆∞u, c√∫ ph√°p: `!continuechat <chatId>`',
    
    async execute(message, args, config, logModAction, sendEmbedMessage, client, model) {
        let userId = message.author.id;
        let chatId;
        // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ cung c·∫•p ID cu·ªôc tr√≤ chuy·ªán ch∆∞a
        if (!args[0]) {
            return message.reply('Vui l√≤ng cung c·∫•p ID cu·ªôc tr√≤ chuy·ªán (v√≠ d·ª•: a1, a2, ...). S·ª≠ d·ª•ng l·ªánh `!chats` ƒë·ªÉ xem danh s√°ch cu·ªôc tr√≤ chuy·ªán c·ªßa b·∫°n.');
        }
        chatId = args[0];
        const member = message.mentions.members.first();
        if (member) {
            userId = member.id;
            if (!args[1]) {
                return message.reply('Vui l√≤ng cung c·∫•p ID cu·ªôc tr√≤ chuy·ªán (v√≠ d·ª•: a1, a2, ...). S·ª≠ d·ª•ng l·ªánh `!chats ho·∫∑c !chats @orderUser` ƒë·ªÉ xem danh s√°ch cu·ªôc tr√≤ chuy·ªán c·ªßa b·∫°n. N·∫øu s·ª≠ d·ª•ng @orderUser, h√£y cung c·∫•p ID cu·ªôc tr√≤ chuy·ªán c·ªßa h·ªç.');
            }
            chatId = args[1];
        }
    
        try {
            // T√¨m ki·∫øm cu·ªôc tr√≤ chuy·ªán trong c∆° s·ªü d·ªØ li·ªáu
            const chats = await db.getUserChats(userId);
            const targetChat = chats.find(chat => chat.chat_id === chatId);
            
            if (!targetChat) {
                return message.reply(`Kh√¥ng t√¨m th·∫•y cu·ªôc tr√≤ chuy·ªán v·ªõi ID "${chatId}". Vui l√≤ng ki·ªÉm tra l·∫°i ho·∫∑c s·ª≠ d·ª•ng l·ªánh \`!chats\` ƒë·ªÉ xem danh s√°ch cu·ªôc tr√≤ chuy·ªán c·ªßa b·∫°n.`);
            }
            
            // C·∫≠p nh·∫≠t th·ªùi gian truy c·∫≠p ƒë·ªÉ ƒë·∫∑t cu·ªôc tr√≤ chuy·ªán n√†y th√†nh hi·ªán t·∫°i
            await db.updateChatTime(userId, targetChat.id);
            
            // L·∫•y tin nh·∫Øn g·∫ßn ƒë√¢y t·ª´ cu·ªôc tr√≤ chuy·ªán
            const recentMessages = await db.getMessagesFromChat(targetChat.id, 5);
            let messagePreview = "";
            
            if (recentMessages && recentMessages.length > 0) {
                messagePreview = recentMessages.map(msg => 
                    `${msg.role === 'user' ? 'üë§ B·∫°n' : 'ü§ñ AI'}: ${msg.content.substring(0, 100)}${msg.content.length > 100 ? '...' : ''}`
                ).join('\n');
            } else {
                messagePreview = "(Ch∆∞a c√≥ tin nh·∫Øn)";
            }
            
            // G·ª≠i x√°c nh·∫≠n
            await message.reply(`ƒê√£ chuy·ªÉn ƒë·∫øn cu·ªôc tr√≤ chuy·ªán: **${targetChat.title || chatId}**\n\nC√°c tin nh·∫Øn g·∫ßn ƒë√¢y:\n${messagePreview}\n\nB·∫°n c√≥ th·ªÉ ti·∫øp t·ª•c tr√≤ chuy·ªán v·ªõi l·ªánh \`!ai\`.`);
            
            // Ghi log
            console.log(`User ${message.author.tag} (${userId}) ƒë√£ ti·∫øp t·ª•c cu·ªôc tr√≤ chuy·ªán ${chatId}`);
            
        } catch (error) {
            console.error(`L·ªói khi ti·∫øp t·ª•c cu·ªôc tr√≤ chuy·ªán: ${error.message}`);
            message.reply('C√≥ l·ªói x·∫£y ra khi chuy·ªÉn cu·ªôc tr√≤ chuy·ªán. Vui l√≤ng th·ª≠ l·∫°i sau.');
        }
    },
};