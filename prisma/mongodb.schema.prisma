generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user_sequences {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  user_id       String  @unique
  last_sequence Int     @default(0)

  @@map("user_sequences")
}

model chats {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  user_id       String
  chat_sequence Int
  chat_id       String
  title         String?
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  messages      chat_messages[]

  @@unique([user_id, chat_sequence])
  @@map("chats")
}

model chat_messages {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id   String
  role      String
  content   String
  timestamp DateTime @default(now())
  chat      chats    @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  chat_id   String   @db.ObjectId

  @@map("chat_messages")
}

model global_chats {
  id            String                 @id @default(auto()) @map("_id") @db.ObjectId
  chat_sequence Int
  chat_id       String
  creator_id    String
  title         String?
  created_at    DateTime               @default(now())
  updated_at    DateTime               @updatedAt
  messages      global_chat_messages[]

  @@map("global_chats")
}

model global_chat_messages {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  user_id   String
  name      String?
  role      String
  content   String
  timestamp DateTime     @default(now())
  chat      global_chats @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  chat_id   String       @db.ObjectId

  @@map("global_chat_messages")
}

model settings {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  key   String  @unique
  value String?

  @@map("settings")
}

model users {
  id        String     @id @default(uuid())
  password  String
  username  String     @unique
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())

  @@map("users")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  MANAGER
  USER
  GUEST
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
  PENDING
}